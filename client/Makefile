# Makefile.in generated by automake 1.11.1 from Makefile.am.
# client/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/plinkseq
pkgincludedir = $(includedir)/plinkseq
pkglibdir = $(libdir)/plinkseq
pkglibexecdir = $(libexecdir)/plinkseq
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin11.4.0
host_triplet = x86_64-apple-darwin11.4.0
bin_PROGRAMS = pseq$(EXEEXT)
#am__append_1 = -I $(PROTOBUF_PREFIX)/include
#am__append_2 = -no-install all-static
subdir = client
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_pseq_OBJECTS = pseq-skat.$(OBJEXT) pseq-util.$(OBJEXT) \
	pseq-ibs.$(OBJEXT) pseq-main.$(OBJEXT) pseq-func.$(OBJEXT) \
	pseq-summaries.$(OBJEXT) pseq-views.$(OBJEXT) \
	pseq-assoc.$(OBJEXT) pseq-genic.$(OBJEXT) \
	pseq-compare.$(OBJEXT) pseq-ibd.$(OBJEXT) \
	pseq-loaders.$(OBJEXT) pseq-clusters.$(OBJEXT) \
	pseq-varfunc.$(OBJEXT) pseq-glm-tests.$(OBJEXT) \
	pseq-stepup.$(OBJEXT) pseq-kbac.$(OBJEXT) \
	pseq-netassoc.$(OBJEXT) pseq-davies.$(OBJEXT) \
	pseq-gseq.$(OBJEXT) pseq-extra.$(OBJEXT) pseq-cnv.$(OBJEXT) \
	pseq-chet.$(OBJEXT)
pseq_OBJECTS = $(am_pseq_OBJECTS)
pseq_DEPENDENCIES = ../lib/libplinkseq.la
pseq_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(pseq_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(pseq_SOURCES)
DIST_SOURCES = $(pseq_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/thomas/code/plinkseq5/missing --run aclocal-1.11
AMTAR = ${SHELL} /Users/thomas/code/plinkseq5/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/thomas/code/plinkseq5/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/thomas/code/plinkseq5/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/thomas/code/plinkseq5/missing --run automake-1.11
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_LIBPROTOBUF = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/llvm-gcc-4.2/libexec/gcc/i686-apple-darwin11/4.2.1/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/thomas/code/plinkseq5/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = .././install-sh -c -d
NM = /usr/bin/nm
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = plinkseq
PACKAGE_BUGREPORT = bthomas@atgu.mgh.harvard.edu
PACKAGE_NAME = plinkseq
PACKAGE_STRING = plinkseq 0.08
PACKAGE_TARNAME = plinkseq
PACKAGE_URL = 
PACKAGE_VERSION = 0.08
PATH_SEPARATOR = :
PROTOBUF_PREFIX = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.08
abs_builddir = /Users/thomas/code/plinkseq5/client
abs_srcdir = /Users/thomas/code/plinkseq5/client
abs_top_builddir = /Users/thomas/code/plinkseq5
abs_top_srcdir = /Users/thomas/code/plinkseq5
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin11.4.0
build_alias = 
build_cpu = x86_64
build_os = darwin11.4.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin11.4.0
host_alias = 
host_cpu = x86_64
host_os = darwin11.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/thomas/code/plinkseq5/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/./install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
pseq_SOURCES = \
skat.cpp \
assoc.h \
clusters.h \
compare.h \
extra.h \
func.h \
genic.h \
ibd.h \
ibs.h \
loaders.h \
netassoc.h \
summaries.h \
util.h \
views.h \
davies.h \
util.cpp \
ibs.cpp \
main.cpp \
func.cpp \
summaries.cpp \
views.cpp \
assoc.cpp \
genic.cpp \
compare.cpp \
ibd.cpp \
loaders.cpp \
clusters.cpp \
varfunc.cpp \
glm-tests.cpp \
stepup.cpp \
kbac.cpp \
netassoc.cpp \
davies.cpp \
gseq.cpp \
extra.cpp \
cnv.h \
cnv.cpp \
chet.cpp


# note that we don't need to link to any shared libs here
# they are all linked transitively from libplinkseq
# we still need to include headers until we create public headers for the lib
pseq_LDADD = ../lib/libplinkseq.la
pseq_CPPFLAGS = -I../lib $(am__append_1)
pseq_LDFLAGS = -lz -ldl $(am__append_2)
ACLOCAL_AMFLAGS = -I m4
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign client/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign client/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
pseq$(EXEEXT): $(pseq_OBJECTS) $(pseq_DEPENDENCIES) 
	@rm -f pseq$(EXEEXT)
	$(pseq_LINK) $(pseq_OBJECTS) $(pseq_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/pseq-assoc.Po
include ./$(DEPDIR)/pseq-chet.Po
include ./$(DEPDIR)/pseq-clusters.Po
include ./$(DEPDIR)/pseq-cnv.Po
include ./$(DEPDIR)/pseq-compare.Po
include ./$(DEPDIR)/pseq-davies.Po
include ./$(DEPDIR)/pseq-extra.Po
include ./$(DEPDIR)/pseq-func.Po
include ./$(DEPDIR)/pseq-genic.Po
include ./$(DEPDIR)/pseq-glm-tests.Po
include ./$(DEPDIR)/pseq-gseq.Po
include ./$(DEPDIR)/pseq-ibd.Po
include ./$(DEPDIR)/pseq-ibs.Po
include ./$(DEPDIR)/pseq-kbac.Po
include ./$(DEPDIR)/pseq-loaders.Po
include ./$(DEPDIR)/pseq-main.Po
include ./$(DEPDIR)/pseq-netassoc.Po
include ./$(DEPDIR)/pseq-skat.Po
include ./$(DEPDIR)/pseq-stepup.Po
include ./$(DEPDIR)/pseq-summaries.Po
include ./$(DEPDIR)/pseq-util.Po
include ./$(DEPDIR)/pseq-varfunc.Po
include ./$(DEPDIR)/pseq-views.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

pseq-skat.o: skat.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-skat.o -MD -MP -MF $(DEPDIR)/pseq-skat.Tpo -c -o pseq-skat.o `test -f 'skat.cpp' || echo '$(srcdir)/'`skat.cpp
	$(am__mv) $(DEPDIR)/pseq-skat.Tpo $(DEPDIR)/pseq-skat.Po
#	source='skat.cpp' object='pseq-skat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-skat.o `test -f 'skat.cpp' || echo '$(srcdir)/'`skat.cpp

pseq-skat.obj: skat.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-skat.obj -MD -MP -MF $(DEPDIR)/pseq-skat.Tpo -c -o pseq-skat.obj `if test -f 'skat.cpp'; then $(CYGPATH_W) 'skat.cpp'; else $(CYGPATH_W) '$(srcdir)/skat.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-skat.Tpo $(DEPDIR)/pseq-skat.Po
#	source='skat.cpp' object='pseq-skat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-skat.obj `if test -f 'skat.cpp'; then $(CYGPATH_W) 'skat.cpp'; else $(CYGPATH_W) '$(srcdir)/skat.cpp'; fi`

pseq-util.o: util.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-util.o -MD -MP -MF $(DEPDIR)/pseq-util.Tpo -c -o pseq-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(am__mv) $(DEPDIR)/pseq-util.Tpo $(DEPDIR)/pseq-util.Po
#	source='util.cpp' object='pseq-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

pseq-util.obj: util.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-util.obj -MD -MP -MF $(DEPDIR)/pseq-util.Tpo -c -o pseq-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-util.Tpo $(DEPDIR)/pseq-util.Po
#	source='util.cpp' object='pseq-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

pseq-ibs.o: ibs.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-ibs.o -MD -MP -MF $(DEPDIR)/pseq-ibs.Tpo -c -o pseq-ibs.o `test -f 'ibs.cpp' || echo '$(srcdir)/'`ibs.cpp
	$(am__mv) $(DEPDIR)/pseq-ibs.Tpo $(DEPDIR)/pseq-ibs.Po
#	source='ibs.cpp' object='pseq-ibs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-ibs.o `test -f 'ibs.cpp' || echo '$(srcdir)/'`ibs.cpp

pseq-ibs.obj: ibs.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-ibs.obj -MD -MP -MF $(DEPDIR)/pseq-ibs.Tpo -c -o pseq-ibs.obj `if test -f 'ibs.cpp'; then $(CYGPATH_W) 'ibs.cpp'; else $(CYGPATH_W) '$(srcdir)/ibs.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-ibs.Tpo $(DEPDIR)/pseq-ibs.Po
#	source='ibs.cpp' object='pseq-ibs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-ibs.obj `if test -f 'ibs.cpp'; then $(CYGPATH_W) 'ibs.cpp'; else $(CYGPATH_W) '$(srcdir)/ibs.cpp'; fi`

pseq-main.o: main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-main.o -MD -MP -MF $(DEPDIR)/pseq-main.Tpo -c -o pseq-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
	$(am__mv) $(DEPDIR)/pseq-main.Tpo $(DEPDIR)/pseq-main.Po
#	source='main.cpp' object='pseq-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

pseq-main.obj: main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-main.obj -MD -MP -MF $(DEPDIR)/pseq-main.Tpo -c -o pseq-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-main.Tpo $(DEPDIR)/pseq-main.Po
#	source='main.cpp' object='pseq-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

pseq-func.o: func.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-func.o -MD -MP -MF $(DEPDIR)/pseq-func.Tpo -c -o pseq-func.o `test -f 'func.cpp' || echo '$(srcdir)/'`func.cpp
	$(am__mv) $(DEPDIR)/pseq-func.Tpo $(DEPDIR)/pseq-func.Po
#	source='func.cpp' object='pseq-func.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-func.o `test -f 'func.cpp' || echo '$(srcdir)/'`func.cpp

pseq-func.obj: func.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-func.obj -MD -MP -MF $(DEPDIR)/pseq-func.Tpo -c -o pseq-func.obj `if test -f 'func.cpp'; then $(CYGPATH_W) 'func.cpp'; else $(CYGPATH_W) '$(srcdir)/func.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-func.Tpo $(DEPDIR)/pseq-func.Po
#	source='func.cpp' object='pseq-func.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-func.obj `if test -f 'func.cpp'; then $(CYGPATH_W) 'func.cpp'; else $(CYGPATH_W) '$(srcdir)/func.cpp'; fi`

pseq-summaries.o: summaries.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-summaries.o -MD -MP -MF $(DEPDIR)/pseq-summaries.Tpo -c -o pseq-summaries.o `test -f 'summaries.cpp' || echo '$(srcdir)/'`summaries.cpp
	$(am__mv) $(DEPDIR)/pseq-summaries.Tpo $(DEPDIR)/pseq-summaries.Po
#	source='summaries.cpp' object='pseq-summaries.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-summaries.o `test -f 'summaries.cpp' || echo '$(srcdir)/'`summaries.cpp

pseq-summaries.obj: summaries.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-summaries.obj -MD -MP -MF $(DEPDIR)/pseq-summaries.Tpo -c -o pseq-summaries.obj `if test -f 'summaries.cpp'; then $(CYGPATH_W) 'summaries.cpp'; else $(CYGPATH_W) '$(srcdir)/summaries.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-summaries.Tpo $(DEPDIR)/pseq-summaries.Po
#	source='summaries.cpp' object='pseq-summaries.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-summaries.obj `if test -f 'summaries.cpp'; then $(CYGPATH_W) 'summaries.cpp'; else $(CYGPATH_W) '$(srcdir)/summaries.cpp'; fi`

pseq-views.o: views.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-views.o -MD -MP -MF $(DEPDIR)/pseq-views.Tpo -c -o pseq-views.o `test -f 'views.cpp' || echo '$(srcdir)/'`views.cpp
	$(am__mv) $(DEPDIR)/pseq-views.Tpo $(DEPDIR)/pseq-views.Po
#	source='views.cpp' object='pseq-views.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-views.o `test -f 'views.cpp' || echo '$(srcdir)/'`views.cpp

pseq-views.obj: views.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-views.obj -MD -MP -MF $(DEPDIR)/pseq-views.Tpo -c -o pseq-views.obj `if test -f 'views.cpp'; then $(CYGPATH_W) 'views.cpp'; else $(CYGPATH_W) '$(srcdir)/views.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-views.Tpo $(DEPDIR)/pseq-views.Po
#	source='views.cpp' object='pseq-views.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-views.obj `if test -f 'views.cpp'; then $(CYGPATH_W) 'views.cpp'; else $(CYGPATH_W) '$(srcdir)/views.cpp'; fi`

pseq-assoc.o: assoc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-assoc.o -MD -MP -MF $(DEPDIR)/pseq-assoc.Tpo -c -o pseq-assoc.o `test -f 'assoc.cpp' || echo '$(srcdir)/'`assoc.cpp
	$(am__mv) $(DEPDIR)/pseq-assoc.Tpo $(DEPDIR)/pseq-assoc.Po
#	source='assoc.cpp' object='pseq-assoc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-assoc.o `test -f 'assoc.cpp' || echo '$(srcdir)/'`assoc.cpp

pseq-assoc.obj: assoc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-assoc.obj -MD -MP -MF $(DEPDIR)/pseq-assoc.Tpo -c -o pseq-assoc.obj `if test -f 'assoc.cpp'; then $(CYGPATH_W) 'assoc.cpp'; else $(CYGPATH_W) '$(srcdir)/assoc.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-assoc.Tpo $(DEPDIR)/pseq-assoc.Po
#	source='assoc.cpp' object='pseq-assoc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-assoc.obj `if test -f 'assoc.cpp'; then $(CYGPATH_W) 'assoc.cpp'; else $(CYGPATH_W) '$(srcdir)/assoc.cpp'; fi`

pseq-genic.o: genic.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-genic.o -MD -MP -MF $(DEPDIR)/pseq-genic.Tpo -c -o pseq-genic.o `test -f 'genic.cpp' || echo '$(srcdir)/'`genic.cpp
	$(am__mv) $(DEPDIR)/pseq-genic.Tpo $(DEPDIR)/pseq-genic.Po
#	source='genic.cpp' object='pseq-genic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-genic.o `test -f 'genic.cpp' || echo '$(srcdir)/'`genic.cpp

pseq-genic.obj: genic.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-genic.obj -MD -MP -MF $(DEPDIR)/pseq-genic.Tpo -c -o pseq-genic.obj `if test -f 'genic.cpp'; then $(CYGPATH_W) 'genic.cpp'; else $(CYGPATH_W) '$(srcdir)/genic.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-genic.Tpo $(DEPDIR)/pseq-genic.Po
#	source='genic.cpp' object='pseq-genic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-genic.obj `if test -f 'genic.cpp'; then $(CYGPATH_W) 'genic.cpp'; else $(CYGPATH_W) '$(srcdir)/genic.cpp'; fi`

pseq-compare.o: compare.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-compare.o -MD -MP -MF $(DEPDIR)/pseq-compare.Tpo -c -o pseq-compare.o `test -f 'compare.cpp' || echo '$(srcdir)/'`compare.cpp
	$(am__mv) $(DEPDIR)/pseq-compare.Tpo $(DEPDIR)/pseq-compare.Po
#	source='compare.cpp' object='pseq-compare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-compare.o `test -f 'compare.cpp' || echo '$(srcdir)/'`compare.cpp

pseq-compare.obj: compare.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-compare.obj -MD -MP -MF $(DEPDIR)/pseq-compare.Tpo -c -o pseq-compare.obj `if test -f 'compare.cpp'; then $(CYGPATH_W) 'compare.cpp'; else $(CYGPATH_W) '$(srcdir)/compare.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-compare.Tpo $(DEPDIR)/pseq-compare.Po
#	source='compare.cpp' object='pseq-compare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-compare.obj `if test -f 'compare.cpp'; then $(CYGPATH_W) 'compare.cpp'; else $(CYGPATH_W) '$(srcdir)/compare.cpp'; fi`

pseq-ibd.o: ibd.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-ibd.o -MD -MP -MF $(DEPDIR)/pseq-ibd.Tpo -c -o pseq-ibd.o `test -f 'ibd.cpp' || echo '$(srcdir)/'`ibd.cpp
	$(am__mv) $(DEPDIR)/pseq-ibd.Tpo $(DEPDIR)/pseq-ibd.Po
#	source='ibd.cpp' object='pseq-ibd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-ibd.o `test -f 'ibd.cpp' || echo '$(srcdir)/'`ibd.cpp

pseq-ibd.obj: ibd.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-ibd.obj -MD -MP -MF $(DEPDIR)/pseq-ibd.Tpo -c -o pseq-ibd.obj `if test -f 'ibd.cpp'; then $(CYGPATH_W) 'ibd.cpp'; else $(CYGPATH_W) '$(srcdir)/ibd.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-ibd.Tpo $(DEPDIR)/pseq-ibd.Po
#	source='ibd.cpp' object='pseq-ibd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-ibd.obj `if test -f 'ibd.cpp'; then $(CYGPATH_W) 'ibd.cpp'; else $(CYGPATH_W) '$(srcdir)/ibd.cpp'; fi`

pseq-loaders.o: loaders.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-loaders.o -MD -MP -MF $(DEPDIR)/pseq-loaders.Tpo -c -o pseq-loaders.o `test -f 'loaders.cpp' || echo '$(srcdir)/'`loaders.cpp
	$(am__mv) $(DEPDIR)/pseq-loaders.Tpo $(DEPDIR)/pseq-loaders.Po
#	source='loaders.cpp' object='pseq-loaders.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-loaders.o `test -f 'loaders.cpp' || echo '$(srcdir)/'`loaders.cpp

pseq-loaders.obj: loaders.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-loaders.obj -MD -MP -MF $(DEPDIR)/pseq-loaders.Tpo -c -o pseq-loaders.obj `if test -f 'loaders.cpp'; then $(CYGPATH_W) 'loaders.cpp'; else $(CYGPATH_W) '$(srcdir)/loaders.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-loaders.Tpo $(DEPDIR)/pseq-loaders.Po
#	source='loaders.cpp' object='pseq-loaders.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-loaders.obj `if test -f 'loaders.cpp'; then $(CYGPATH_W) 'loaders.cpp'; else $(CYGPATH_W) '$(srcdir)/loaders.cpp'; fi`

pseq-clusters.o: clusters.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-clusters.o -MD -MP -MF $(DEPDIR)/pseq-clusters.Tpo -c -o pseq-clusters.o `test -f 'clusters.cpp' || echo '$(srcdir)/'`clusters.cpp
	$(am__mv) $(DEPDIR)/pseq-clusters.Tpo $(DEPDIR)/pseq-clusters.Po
#	source='clusters.cpp' object='pseq-clusters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-clusters.o `test -f 'clusters.cpp' || echo '$(srcdir)/'`clusters.cpp

pseq-clusters.obj: clusters.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-clusters.obj -MD -MP -MF $(DEPDIR)/pseq-clusters.Tpo -c -o pseq-clusters.obj `if test -f 'clusters.cpp'; then $(CYGPATH_W) 'clusters.cpp'; else $(CYGPATH_W) '$(srcdir)/clusters.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-clusters.Tpo $(DEPDIR)/pseq-clusters.Po
#	source='clusters.cpp' object='pseq-clusters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-clusters.obj `if test -f 'clusters.cpp'; then $(CYGPATH_W) 'clusters.cpp'; else $(CYGPATH_W) '$(srcdir)/clusters.cpp'; fi`

pseq-varfunc.o: varfunc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-varfunc.o -MD -MP -MF $(DEPDIR)/pseq-varfunc.Tpo -c -o pseq-varfunc.o `test -f 'varfunc.cpp' || echo '$(srcdir)/'`varfunc.cpp
	$(am__mv) $(DEPDIR)/pseq-varfunc.Tpo $(DEPDIR)/pseq-varfunc.Po
#	source='varfunc.cpp' object='pseq-varfunc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-varfunc.o `test -f 'varfunc.cpp' || echo '$(srcdir)/'`varfunc.cpp

pseq-varfunc.obj: varfunc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-varfunc.obj -MD -MP -MF $(DEPDIR)/pseq-varfunc.Tpo -c -o pseq-varfunc.obj `if test -f 'varfunc.cpp'; then $(CYGPATH_W) 'varfunc.cpp'; else $(CYGPATH_W) '$(srcdir)/varfunc.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-varfunc.Tpo $(DEPDIR)/pseq-varfunc.Po
#	source='varfunc.cpp' object='pseq-varfunc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-varfunc.obj `if test -f 'varfunc.cpp'; then $(CYGPATH_W) 'varfunc.cpp'; else $(CYGPATH_W) '$(srcdir)/varfunc.cpp'; fi`

pseq-glm-tests.o: glm-tests.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-glm-tests.o -MD -MP -MF $(DEPDIR)/pseq-glm-tests.Tpo -c -o pseq-glm-tests.o `test -f 'glm-tests.cpp' || echo '$(srcdir)/'`glm-tests.cpp
	$(am__mv) $(DEPDIR)/pseq-glm-tests.Tpo $(DEPDIR)/pseq-glm-tests.Po
#	source='glm-tests.cpp' object='pseq-glm-tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-glm-tests.o `test -f 'glm-tests.cpp' || echo '$(srcdir)/'`glm-tests.cpp

pseq-glm-tests.obj: glm-tests.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-glm-tests.obj -MD -MP -MF $(DEPDIR)/pseq-glm-tests.Tpo -c -o pseq-glm-tests.obj `if test -f 'glm-tests.cpp'; then $(CYGPATH_W) 'glm-tests.cpp'; else $(CYGPATH_W) '$(srcdir)/glm-tests.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-glm-tests.Tpo $(DEPDIR)/pseq-glm-tests.Po
#	source='glm-tests.cpp' object='pseq-glm-tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-glm-tests.obj `if test -f 'glm-tests.cpp'; then $(CYGPATH_W) 'glm-tests.cpp'; else $(CYGPATH_W) '$(srcdir)/glm-tests.cpp'; fi`

pseq-stepup.o: stepup.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-stepup.o -MD -MP -MF $(DEPDIR)/pseq-stepup.Tpo -c -o pseq-stepup.o `test -f 'stepup.cpp' || echo '$(srcdir)/'`stepup.cpp
	$(am__mv) $(DEPDIR)/pseq-stepup.Tpo $(DEPDIR)/pseq-stepup.Po
#	source='stepup.cpp' object='pseq-stepup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-stepup.o `test -f 'stepup.cpp' || echo '$(srcdir)/'`stepup.cpp

pseq-stepup.obj: stepup.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-stepup.obj -MD -MP -MF $(DEPDIR)/pseq-stepup.Tpo -c -o pseq-stepup.obj `if test -f 'stepup.cpp'; then $(CYGPATH_W) 'stepup.cpp'; else $(CYGPATH_W) '$(srcdir)/stepup.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-stepup.Tpo $(DEPDIR)/pseq-stepup.Po
#	source='stepup.cpp' object='pseq-stepup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-stepup.obj `if test -f 'stepup.cpp'; then $(CYGPATH_W) 'stepup.cpp'; else $(CYGPATH_W) '$(srcdir)/stepup.cpp'; fi`

pseq-kbac.o: kbac.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-kbac.o -MD -MP -MF $(DEPDIR)/pseq-kbac.Tpo -c -o pseq-kbac.o `test -f 'kbac.cpp' || echo '$(srcdir)/'`kbac.cpp
	$(am__mv) $(DEPDIR)/pseq-kbac.Tpo $(DEPDIR)/pseq-kbac.Po
#	source='kbac.cpp' object='pseq-kbac.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-kbac.o `test -f 'kbac.cpp' || echo '$(srcdir)/'`kbac.cpp

pseq-kbac.obj: kbac.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-kbac.obj -MD -MP -MF $(DEPDIR)/pseq-kbac.Tpo -c -o pseq-kbac.obj `if test -f 'kbac.cpp'; then $(CYGPATH_W) 'kbac.cpp'; else $(CYGPATH_W) '$(srcdir)/kbac.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-kbac.Tpo $(DEPDIR)/pseq-kbac.Po
#	source='kbac.cpp' object='pseq-kbac.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-kbac.obj `if test -f 'kbac.cpp'; then $(CYGPATH_W) 'kbac.cpp'; else $(CYGPATH_W) '$(srcdir)/kbac.cpp'; fi`

pseq-netassoc.o: netassoc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-netassoc.o -MD -MP -MF $(DEPDIR)/pseq-netassoc.Tpo -c -o pseq-netassoc.o `test -f 'netassoc.cpp' || echo '$(srcdir)/'`netassoc.cpp
	$(am__mv) $(DEPDIR)/pseq-netassoc.Tpo $(DEPDIR)/pseq-netassoc.Po
#	source='netassoc.cpp' object='pseq-netassoc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-netassoc.o `test -f 'netassoc.cpp' || echo '$(srcdir)/'`netassoc.cpp

pseq-netassoc.obj: netassoc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-netassoc.obj -MD -MP -MF $(DEPDIR)/pseq-netassoc.Tpo -c -o pseq-netassoc.obj `if test -f 'netassoc.cpp'; then $(CYGPATH_W) 'netassoc.cpp'; else $(CYGPATH_W) '$(srcdir)/netassoc.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-netassoc.Tpo $(DEPDIR)/pseq-netassoc.Po
#	source='netassoc.cpp' object='pseq-netassoc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-netassoc.obj `if test -f 'netassoc.cpp'; then $(CYGPATH_W) 'netassoc.cpp'; else $(CYGPATH_W) '$(srcdir)/netassoc.cpp'; fi`

pseq-davies.o: davies.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-davies.o -MD -MP -MF $(DEPDIR)/pseq-davies.Tpo -c -o pseq-davies.o `test -f 'davies.cpp' || echo '$(srcdir)/'`davies.cpp
	$(am__mv) $(DEPDIR)/pseq-davies.Tpo $(DEPDIR)/pseq-davies.Po
#	source='davies.cpp' object='pseq-davies.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-davies.o `test -f 'davies.cpp' || echo '$(srcdir)/'`davies.cpp

pseq-davies.obj: davies.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-davies.obj -MD -MP -MF $(DEPDIR)/pseq-davies.Tpo -c -o pseq-davies.obj `if test -f 'davies.cpp'; then $(CYGPATH_W) 'davies.cpp'; else $(CYGPATH_W) '$(srcdir)/davies.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-davies.Tpo $(DEPDIR)/pseq-davies.Po
#	source='davies.cpp' object='pseq-davies.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-davies.obj `if test -f 'davies.cpp'; then $(CYGPATH_W) 'davies.cpp'; else $(CYGPATH_W) '$(srcdir)/davies.cpp'; fi`

pseq-gseq.o: gseq.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-gseq.o -MD -MP -MF $(DEPDIR)/pseq-gseq.Tpo -c -o pseq-gseq.o `test -f 'gseq.cpp' || echo '$(srcdir)/'`gseq.cpp
	$(am__mv) $(DEPDIR)/pseq-gseq.Tpo $(DEPDIR)/pseq-gseq.Po
#	source='gseq.cpp' object='pseq-gseq.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-gseq.o `test -f 'gseq.cpp' || echo '$(srcdir)/'`gseq.cpp

pseq-gseq.obj: gseq.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-gseq.obj -MD -MP -MF $(DEPDIR)/pseq-gseq.Tpo -c -o pseq-gseq.obj `if test -f 'gseq.cpp'; then $(CYGPATH_W) 'gseq.cpp'; else $(CYGPATH_W) '$(srcdir)/gseq.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-gseq.Tpo $(DEPDIR)/pseq-gseq.Po
#	source='gseq.cpp' object='pseq-gseq.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-gseq.obj `if test -f 'gseq.cpp'; then $(CYGPATH_W) 'gseq.cpp'; else $(CYGPATH_W) '$(srcdir)/gseq.cpp'; fi`

pseq-extra.o: extra.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-extra.o -MD -MP -MF $(DEPDIR)/pseq-extra.Tpo -c -o pseq-extra.o `test -f 'extra.cpp' || echo '$(srcdir)/'`extra.cpp
	$(am__mv) $(DEPDIR)/pseq-extra.Tpo $(DEPDIR)/pseq-extra.Po
#	source='extra.cpp' object='pseq-extra.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-extra.o `test -f 'extra.cpp' || echo '$(srcdir)/'`extra.cpp

pseq-extra.obj: extra.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-extra.obj -MD -MP -MF $(DEPDIR)/pseq-extra.Tpo -c -o pseq-extra.obj `if test -f 'extra.cpp'; then $(CYGPATH_W) 'extra.cpp'; else $(CYGPATH_W) '$(srcdir)/extra.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-extra.Tpo $(DEPDIR)/pseq-extra.Po
#	source='extra.cpp' object='pseq-extra.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-extra.obj `if test -f 'extra.cpp'; then $(CYGPATH_W) 'extra.cpp'; else $(CYGPATH_W) '$(srcdir)/extra.cpp'; fi`

pseq-cnv.o: cnv.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-cnv.o -MD -MP -MF $(DEPDIR)/pseq-cnv.Tpo -c -o pseq-cnv.o `test -f 'cnv.cpp' || echo '$(srcdir)/'`cnv.cpp
	$(am__mv) $(DEPDIR)/pseq-cnv.Tpo $(DEPDIR)/pseq-cnv.Po
#	source='cnv.cpp' object='pseq-cnv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-cnv.o `test -f 'cnv.cpp' || echo '$(srcdir)/'`cnv.cpp

pseq-cnv.obj: cnv.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-cnv.obj -MD -MP -MF $(DEPDIR)/pseq-cnv.Tpo -c -o pseq-cnv.obj `if test -f 'cnv.cpp'; then $(CYGPATH_W) 'cnv.cpp'; else $(CYGPATH_W) '$(srcdir)/cnv.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-cnv.Tpo $(DEPDIR)/pseq-cnv.Po
#	source='cnv.cpp' object='pseq-cnv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-cnv.obj `if test -f 'cnv.cpp'; then $(CYGPATH_W) 'cnv.cpp'; else $(CYGPATH_W) '$(srcdir)/cnv.cpp'; fi`

pseq-chet.o: chet.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-chet.o -MD -MP -MF $(DEPDIR)/pseq-chet.Tpo -c -o pseq-chet.o `test -f 'chet.cpp' || echo '$(srcdir)/'`chet.cpp
	$(am__mv) $(DEPDIR)/pseq-chet.Tpo $(DEPDIR)/pseq-chet.Po
#	source='chet.cpp' object='pseq-chet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-chet.o `test -f 'chet.cpp' || echo '$(srcdir)/'`chet.cpp

pseq-chet.obj: chet.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pseq-chet.obj -MD -MP -MF $(DEPDIR)/pseq-chet.Tpo -c -o pseq-chet.obj `if test -f 'chet.cpp'; then $(CYGPATH_W) 'chet.cpp'; else $(CYGPATH_W) '$(srcdir)/chet.cpp'; fi`
	$(am__mv) $(DEPDIR)/pseq-chet.Tpo $(DEPDIR)/pseq-chet.Po
#	source='chet.cpp' object='pseq-chet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pseq_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pseq-chet.obj `if test -f 'chet.cpp'; then $(CYGPATH_W) 'chet.cpp'; else $(CYGPATH_W) '$(srcdir)/chet.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
